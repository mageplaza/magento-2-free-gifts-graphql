# Mageplaza
#
# NOTICE OF LICENSE
#
# This source file is subject to the Mageplaza.com license that is
# available through the world-wide-web at this URL:
# https://www.mageplaza.com/LICENSE.txt
#
# DISCLAIMER
#
# Do not edit or add to this file if you wish to upgrade this extension to newer
# version in the future.
#
# @category    Mageplaza
# @package     Mageplaza_FreeGiftsGraphQl
# @copyright   Copyright (c) Mageplaza (https://www.mageplaza.com/)
# @license     https://www.mageplaza.com/LICENSE.txt

type Query {
    mpFreeGiftsByProductSku(
        sku: String! @doc(description: "Product SKU")
    ):[Rule] @resolver(class: "\\Mageplaza\\FreeGiftsGraphQl\\Model\\Resolver\\GiftByProductSku") @doc(description: "Get free gift list by product sku")
    mpFreeGiftsByQuoteItem(
        item_id: Int! @doc(description: "Quote item id")
    ):[Rule] @resolver(class: "\\Mageplaza\\FreeGiftsGraphQl\\Model\\Resolver\\GiftByQuoteItem") @doc(description: "Get free gift list by quote item id")
    mpFreeGiftsConfigs: ConfigOutput @resolver(class: "\\Mageplaza\\FreeGiftsGraphQl\\Model\\Resolver\\Configs") @doc(description: "Query to get config of Free Gifts.")
}

type Mutation {
    mpFreeGiftsDeleteByQuoteItem (
        cart_id: String! @doc(description: "Masked Cart id")
        item_id: Int! @doc(description: "Quote item id")
    ): Boolean @resolver(class: "\\Mageplaza\\FreeGiftsGraphQl\\Model\\Resolver\\DeleteByQuoteItem") @doc(description:"Delete gift by quote id and quote item id")
    mpFreeGiftsAddGift (
        input: AddGiftInput!
    ): AddedGiftOutput @resolver(class: "\\Mageplaza\\FreeGiftsGraphQl\\Model\\Resolver\\AddGift") @doc(description:"Add gift to quote by quote id, rule id and gift id")
}

type Rule {
    rule_id: String @doc(description: "Free gift rule id")
    auto_add: Int @doc(description: "Free gift rule type")
    max_gift: Int @doc(description: "Maximum number of allowed gifts")
    gifts: [Gift] @doc(description: "Free gift list")
    notice: String @doc(description: "Free gift rule notice")
    total_added: Int @doc(description: "Number of gifts added to current quote")
}

type Gift {
    id: Int @doc(description: "Free gift id")
    name: String @doc(description: "Free gift name")
    gift_price: String @doc(description: "Free gift price")
    free_ship: Int @doc(description: "Whether free gift has free shipping")
    added: Boolean @doc(description: "Whether free gift is added to current quote")
    configurable: Boolean @doc(description: "Whether free gift is a configurable product")
    required_option: Boolean @doc(description: "Whether free gift requires custom option")
    sku: String @doc(description: "SKU of the free gift")
    final_price:String @doc(description: "Free gift actual price")
    image: String @doc(description: "Free gift image URL")
}

type AddedGiftOutput {
    status: String @doc(description: "Added gift item status")
    message: String @doc(description: "Added gift item message")
    rule_id: String @doc(description: "Added gift item rule id")
    quote_id: String @doc(description: "Added gift item quote id")
    quote_item_id: String @doc(description: "Added gift item quote item id")
    product_gift_id: String @doc(description: "Added gift item product gift id")
}

input AddGiftInput {
    cart_id: String! @doc(description: "Masked Cart id")
    rule_id: Int! @doc(description: "Rule id")
    gift_id: Int! @doc(description: "Gift id")
    configurable_options: [ConfigurableOptions] @doc(description: "Gift Configurable Options")
}

input ConfigurableOptions {
    option_id: Int! @doc(description: "Gift Configurable Option Id"),
    option_value: Int! @doc(description: "Gift Configurable Option Value"),
}

type ConfigOutput {
    general: GeneralOutput @doc(description: "The General config output")
    display: DisplayOutput @doc(description: "The Display config output")
    design: DesignOutput @doc(description: "The Design config output")
}

type GeneralOutput {
    gift_layout: String @doc(description: "Gift layout")
    allow_notice: Boolean @doc(description: "Allow notice")
    notice: String @doc(description: "Notice message")
    icon: String @doc(description: "Icon")
}

type DisplayOutput {
    cart_page: Boolean @doc(description: "Display on cart page")
    cart_item: Boolean @doc(description: "Display on cart item")
    product_page: Boolean @doc(description: "Display on product page")
}

type DesignOutput {
    label: String @doc(description: "Label")
    background_color: String @doc(description: "Background color")
    text_color: String @doc(description: "Text color")
}
